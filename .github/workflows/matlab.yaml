name: matlab
on:
  push:
  pull_request:
    branches:
      - main
  workflow_call:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  Matlab-Unit-Tests:
    runs-on: ${{ matrix.os }}

    env:
      ECAT_TEST_FOLDER: "cimbi36"
      REAL_TEST_ECAT_PATH: cimbi36/Gris_102_19_2skan-2019.04.30.13.04.41_em_3d.v
      SMALLER_ECAT_PATH: ${{ github.workspace }}/ecat_validation/ECAT7_multiframe.v.gz
      TEST_ECAT_PATH: ${{ github.workspace }}/ecat_validation/ECAT7_multiframe.v
      OUTPUT_NIFTI_PATH: ${{ github.workspace}}/pypet2bids/tests/ECAT7_multiframe.nii
      READ_ECAT_SAVE_AS_MATLAB: ${{ github.workspace }}/pypet2bids/tests/ECAT7_multiframe.mat
      NIBABEL_READ_ECAT_SAVE_AS_MATLAB: ${{ github.workspace }}/pypet2bids/tests/ECAT7_multiframe.nibabel.mat
      MATLAB_CODE_PATH: ${{ github.workspace }}/matlab/
      METADATA_PATH: ${{ github.workspace }}/metadata/

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Debug
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        timeout-minutes: 15
        with:
          limit-access-to-actor: true

      - name: Cache ECAT
        id: cache-ecat
        uses: actions/cache@v2
        with:
          path: cimbi36
          key: ${{ runner.os }}-ecats

      - name: Install gdown and collect Ecat from Google Drive
        run: "python3 -m pip install gdown && gdown ${{ secrets.CIMBI_ECAT_ON_GOOGLE_DRIVE }} -O ecat_test"

      - name: Decompress dataset
        if: steps.cache-ecat.outputs.cache-hit != 'true'
        run: "tar xvzf ecat_test && rm ecat_test"

        # matlab not supported on MacOS!! at this time
      - name: Perform setup-matlab
        uses: matlab-actions/setup-matlab@v1
        if: matrix.os == 'ubuntu-latest'

        # Again only running this on ubuntu
      - name: Add Matlab Code Folder to Path and Run Tests
        uses: matlab-actions/run-command@v1
        with:
          command: |
            addpath('${{ env.MATLAB_CODE_PATH }}');
            addpath('${{ env.MATLAB_CODE_PATH }}/unit_tests');
            addpath('${{ env.MATLAB_CODE_PATH }}/template_txt');
            addpath('${{ env.SMALLER_ECAT_PATH }}');
            addpath('${{ env.METADATA_PATH }}');
            ecat2nii_test('${{ env.SMALLER_ECAT_PATH }}')
        if: matrix.os == 'ubuntu-latest'
